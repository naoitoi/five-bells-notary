machine:
  node:
    version: 4.3.0
  services:
    - docker
  environment:
    OCI_HOME: /opt/oracle/instantclient
    OCI_LIB_DIR: $OCI_HOME
    OCI_INCLUDE_DIR: $OCI_HOME/sdk/include
    AWS_ACCESS_KEY_ID: AKIAJNJCVLJLCILM2P5Q
    AWS_SECRET_ACCESS_KEY: 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

dependencies:
  pre:
    # Install Oracle
    - docker pull wnameless/oracle-xe-11g
    - docker run -d -p 49160:22 -p 49161:1521 wnameless/oracle-xe-11g
    # Download and unzip Oracle library
    - aws s3 cp s3://ilp-server-ci-files/instantclient-sdk-linux.x64-12.1.0.2.0.zip .
    - aws s3 cp s3://ilp-server-ci-files/instantclient-basic-linux.x64-12.1.0.2.0.zip .
    - unzip instantclient-sdk-linux.x64-12.1.0.2.0.zip
    - unzip instantclient-basic-linux.x64-12.1.0.2.0.zip
    # Need symlinks from .so.12.1 to .so
    - ln -s libocci.so.12.1 instantclient_12_1/libocci.so
    - ln -s libclntsh.so.12.1 instantclient_12_1/libclntsh.so
    - sudo mkdir -p /opt/oracle
    - sudo cp -r instantclient_12_1 /opt/oracle/instantclient

  post:
    - npm i strong-oracle
    # Check for node_modules/strong-oracle explicitly because even if installation of it fails, npm doesn't catch it.
    - if [[ ! -d node_modules/strong-oracle ]] ; then echo 'node_modules/strong-oracle is not there, return error.' ; exit 1 ; fi
test:
  override:
    # Run lint
    - npm run lint
    # Run unit tests on SQLite
    - npm test
    # Run unit tests on Oracle
    - npm run test-oracle-ci
    # Generate API documentation
    - npm run apidoc

deployment:
  production:
    branch: master
    commands:
      # Push NPM package if not yet published
      - mv npmrc-env .npmrc
      - if [ -z "$(npm info $(npm ls --depth=-1 2>/dev/null | head -1 | cut -f 1 -d " ") 2>/dev/null)" ] ; then npm publish ; fi
      # Upload API docs to S3
      - npm install -g s3-cli
      - s3-cli sync --delete-removed apidoc-out s3://interledger-docs/five-bells-notary/latest/apidoc

general:
  artifacts:
    - "apidoc-out"
